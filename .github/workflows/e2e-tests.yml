name: E2E

on:
    pull_request:
        types: [opened, synchronize, reopened, ready_for_review]

env:
    writable: ${{ (github.event_name == 'repository_dispatch' || github.event.pull_request.head.repo.full_name == github.repository && github.actor != 'dependabot[bot]') && 1 || 0 }}
    node-version: 16

defaults:
    run:
        working-directory: .github/e2e

jobs:
    e2e-parallel:
        # TODO: description
        name: E2E parallel
        runs-on: ubuntu-latest
        env:
            file_pattern: .github/e2e/tests/**/*.png
            artifact_name: e2e-parallel

        strategy:
            fail-fast: false
            matrix:
                # run parallel tests on multiple instances
                # see https://playwright.dev/docs/test-parallel#shard-tests-between-multiple-machines
                shard: [1/3, 2/3, 3/3]

        steps:
            -   name: Checkout repository
                uses: actions/checkout@v2
                with:
                    # when in pull requests, we need to fetch more than the 1 default commit
                    # also since we’re about to inspect a bunch of previous commits, we fetch some more commits here
                    fetch-depth: 10

            -   name: Prepare environment variables 🍿
                # save some variables we need for processing later on
                run: |
                    echo "commit_message=$(git log -1 --format=%B ${{ github.event.pull_request.head.sha }})" >> $GITHUB_ENV

            -   name: Check if workflow run was triggerd by auto-commit ♻️
                run: |
                    if ${{ contains(env.commit_message, '[CI_1]') }}; then
                      echo "run_was_triggered_by_autocommit=true" >> $GITHUB_ENV
                    fi

            -   name: Set up PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: '8.1'
                    ini-values: 'error_reporting=E_ALL, display_errors=On, display_startup_errors=On'
                    extensions: gd, pdo_mysql
                    coverage: none # disable xdebug, pcov
                    tools: cs2pr

            -   name: Init database
                run: |
                    sudo /etc/init.d/mysql start
                    mysql -uroot -h127.0.0.1 -proot -e 'create database redaxo5;'
                    git apply .github/workflows/default.config.yml.github-action.diff

            -   name: Set up REDAXO
                run: |
                    php .tools/bin/setup
            -   name: Create user, update config
                run: |
                    php redaxo/bin/console user:create admin admin123 --admin --ansi
                    php redaxo/bin/console user:create user user1234 --ansi
                    php redaxo/bin/console config:set error_email 'test@redaxo.invalid' --ansi
            -   name: Import mock data
                run: |
                    mkdir -p $GITHUB_WORKSPACE/redaxo/data/addons/backup && cp -r .github/imports/inital-content-for-visual-tests.sql $GITHUB_WORKSPACE/redaxo/data/addons/backup/
                    cp -r .github/imports/media/* $GITHUB_WORKSPACE/media/
                    cp -f .github/imports/README.md $GITHUB_WORKSPACE/redaxo/src/addons/project/README.de.md
                    php redaxo/bin/console setup:run -n --lang=de_de --agree-license --db-password=root --db-setup=import --db-import=inital-content-for-visual-tests --admin-username=myusername --admin-password=mypassword --ansi
            -   name: Install packages
                run: |
                    php redaxo/bin/console package:install phpmailer --ansi
                    php redaxo/bin/console package:install cronjob --ansi
                    php redaxo/bin/console package:install cronjob/article_status --ansi
                    php redaxo/bin/console package:install cronjob/optimize_tables --ansi
                    php redaxo/bin/console package:install debug --ansi
                    php redaxo/bin/console package:install structure/history --ansi
                    php redaxo/bin/console package:install structure/version --ansi

            -   name: Setup Webserver
                run: |
                    php -S localhost:8000

            -   name: Set up Node ${{ env.node-version }}
                uses: actions/setup-node@v2
                with:
                    node-version: ${{ env.node-version }}
                    # cache all packages as specified in lockfile
                    cache: 'npm'
                    cache-dependency-path: .github/e2e/package-lock.json

            -   name: Install packages 🐿️🎒
                run: |
                    npm ci --audit=false
                    npx playwright install-deps chromium
                    npx playwright install-deps webkit

            -   name: E2E tests 🕹️
                # run e2e tests, see package.json for details.
                # check for modified (M) and untracked (??) files afterwards
                # hint: if workflow run was triggered by auto-commit, we do not let the step fail
                run: |
                    npm run test -- ./tests/parallel/ --shard=${{ matrix.shard }}
                    if [[ -n $(git status -s -uall ${{ env.file_pattern }} | grep "^ M\|^??") ]]; then
                        echo "has_changed_files=true" >> $GITHUB_ENV
                        if ${{ env.run_was_triggered_by_autocommit != 'true'}}; then
                            exit 1;
                        fi
                    fi

            -   name: Prepare artifact 📦
                # prepare tar archive containing changed files
                # hint: we use `git status` to list changed files, grep all modified and untracked,
                # cut off status infos and pipe each file to the tar archive
                if: failure() && env.has_changed_files
                run: git status -s -uall ${{ env.file_pattern }} | grep "^ M\|^??" | cut -c4- | xargs tar -cvf ${{ env.artifact_name }}.tar

            -   name: Save artifact 💾
                # upload artifact containing changed files
                # hint: since github does not provide a list of artifacts, we prefix them with `ci-artifact-` for now
                # to be able to loop over them when downloaded again
                uses: actions/upload-artifact@v2
                if: failure() && env.has_changed_files
                with:
                    name: ci-artifact-${{ env.artifact_name }}-${{ strategy.job-index }}
                    path: .github/e2e/${{ env.artifact_name }}.tar
                    retention-days: 1

    e2e-serial:
        # TODO: description
        name: E2E serial
        runs-on: ubuntu-latest
        env:
            file_pattern: .github/e2e/tests/**/*.png
            artifact_name: e2e-serial

        steps:
            -   name: Checkout repository
                uses: actions/checkout@v2
                with:
                    # when in pull requests, we need to fetch more than the 1 default commit
                    # also since we’re about to inspect a bunch of previous commits, we fetch some more commits here
                    fetch-depth: 10

            -   name: Prepare environment variables 🍿
                # save some variables we need for processing later on
                run: |
                    echo "commit_message=$(git log -1 --format=%B ${{ github.event.pull_request.head.sha }})" >> $GITHUB_ENV

            -   name: Check if workflow run was triggerd by auto-commit ♻️
                run: |
                    if ${{ contains(env.commit_message, '[CI_1]') }}; then
                      echo "run_was_triggered_by_autocommit=true" >> $GITHUB_ENV
                    fi

            -   name: Set up PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: '8.1'
                    ini-values: 'error_reporting=E_ALL, display_errors=On, display_startup_errors=On'
                    extensions: gd, pdo_mysql
                    coverage: none # disable xdebug, pcov
                    tools: cs2pr

            -   name: Init database
                run: |
                    sudo /etc/init.d/mysql start
                    mysql -uroot -h127.0.0.1 -proot -e 'create database redaxo5;'
                    git apply .github/workflows/default.config.yml.github-action.diff

            -   name: Set up REDAXO
                run: |
                    php .tools/bin/setup
            -   name: Create user, update config
                run: |
                    php redaxo/bin/console user:create admin admin123 --admin --ansi
                    php redaxo/bin/console user:create user user1234 --ansi
                    php redaxo/bin/console config:set error_email 'test@redaxo.invalid' --ansi
            -   name: Import mock data
                run: |
                    mkdir -p $GITHUB_WORKSPACE/redaxo/data/addons/backup && cp -r .github/imports/inital-content-for-visual-tests.sql $GITHUB_WORKSPACE/redaxo/data/addons/backup/
                    cp -r .github/imports/media/* $GITHUB_WORKSPACE/media/
                    cp -f .github/imports/README.md $GITHUB_WORKSPACE/redaxo/src/addons/project/README.de.md
                    php redaxo/bin/console setup:run -n --lang=de_de --agree-license --db-password=root --db-setup=import --db-import=inital-content-for-visual-tests --admin-username=myusername --admin-password=mypassword --ansi
            -   name: Install packages
                run: |
                    php redaxo/bin/console package:install phpmailer --ansi
                    php redaxo/bin/console package:install cronjob --ansi
                    php redaxo/bin/console package:install cronjob/article_status --ansi
                    php redaxo/bin/console package:install cronjob/optimize_tables --ansi
                    php redaxo/bin/console package:install debug --ansi
                    php redaxo/bin/console package:install structure/history --ansi
                    php redaxo/bin/console package:install structure/version --ansi

            -   name: Setup Webserver
                run: |
                    php -S localhost:8000

            -   name: Set up Node ${{ env.node-version }}
                uses: actions/setup-node@v2
                with:
                    node-version: ${{ env.node-version }}
                    # cache all packages as specified in lockfile
                    cache: 'npm'
                    cache-dependency-path: .github/e2e/package-lock.json

            -   name: Install packages 🐿️🎒
                run: |
                    npm ci --audit=false
                    npx playwright install-deps chromium
                    npx playwright install-deps webkit

            -   name: E2E tests 🕹️
                # run e2e tests, see package.json for details.
                # check for modified (M) and untracked (??) files afterwards
                # hint: if workflow run was triggered by auto-commit, we do not let the step fail
                run: |
                    npm run test -- ./tests/serial/ --workers 1
                    if [[ -n $(git status -s -uall ${{ env.file_pattern }} | grep "^ M\|^??") ]]; then
                        echo "has_changed_files=true" >> $GITHUB_ENV
                        if ${{ env.run_was_triggered_by_autocommit != 'true'}}; then
                            exit 1;
                        fi
                    fi

            -   name: Prepare artifact 📦
                # prepare tar archive containing changed files
                # hint: we use `git status` to list changed files, grep all modified and untracked,
                # cut off status infos and pipe each file to the tar archive
                if: failure() && env.has_changed_files
                run: git status -s -uall ${{ env.file_pattern }} | grep "^ M\|^??" | cut -c4- | xargs tar -cvf ${{ env.artifact_name }}.tar

            -   name: Save artifact 💾
                # upload artifact containing changed files
                # hint: since github does not provide a list of artifacts, we prefix them with `ci-artifact-` for now
                # to be able to loop over them when downloaded again
                uses: actions/upload-artifact@v2
                if: failure() && env.has_changed_files
                with:
                    name: ci-artifact-${{ env.artifact_name }}
                    path: .github/e2e/${{ env.artifact_name }}.tar
                    retention-days: 1

    e2e-setup:
        # TODO: description
        name: E2E setup
        runs-on: ubuntu-latest
        env:
            file_pattern: .github/e2e/tests/**/*.png
            artifact_name: e2e-setup

        steps:
            -   name: Checkout repository
                uses: actions/checkout@v2
                with:
                    # when in pull requests, we need to fetch more than the 1 default commit
                    # also since we’re about to inspect a bunch of previous commits, we fetch some more commits here
                    fetch-depth: 10

            -   name: Prepare environment variables 🍿
                # save some variables we need for processing later on
                run: |
                    echo "commit_message=$(git log -1 --format=%B ${{ github.event.pull_request.head.sha }})" >> $GITHUB_ENV

            -   name: Check if workflow run was triggerd by auto-commit ♻️
                run: |
                    if ${{ contains(env.commit_message, '[CI_1]') }}; then
                      echo "run_was_triggered_by_autocommit=true" >> $GITHUB_ENV
                    fi

            -   name: Set up PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: '8.1'
                    ini-values: 'error_reporting=E_ALL, display_errors=On, display_startup_errors=On'
                    extensions: gd, pdo_mysql
                    coverage: none # disable xdebug, pcov
                    tools: cs2pr

            -   name: Init database
                run: |
                    sudo /etc/init.d/mysql start
                    mysql -uroot -h127.0.0.1 -proot -e 'create database redaxo5;'
                    git apply .github/workflows/default.config.yml.github-action.diff

            -   name: Set up REDAXO
                run: |
                    php .tools/bin/setup
            -   name: Create user, update config
                run: |
                    php redaxo/bin/console user:create admin admin123 --admin --ansi
                    php redaxo/bin/console user:create user user1234 --ansi
                    php redaxo/bin/console config:set error_email 'test@redaxo.invalid' --ansi
            -   name: Import mock data
                run: |
                    mkdir -p $GITHUB_WORKSPACE/redaxo/data/addons/backup && cp -r .github/imports/inital-content-for-visual-tests.sql $GITHUB_WORKSPACE/redaxo/data/addons/backup/
                    cp -r .github/imports/media/* $GITHUB_WORKSPACE/media/
                    cp -f .github/imports/README.md $GITHUB_WORKSPACE/redaxo/src/addons/project/README.de.md
                    php redaxo/bin/console setup:run -n --lang=de_de --agree-license --db-password=root --db-setup=import --db-import=inital-content-for-visual-tests --admin-username=myusername --admin-password=mypassword --ansi
            -   name: Install packages
                run: |
                    php redaxo/bin/console package:install phpmailer --ansi
                    php redaxo/bin/console package:install cronjob --ansi
                    php redaxo/bin/console package:install cronjob/article_status --ansi
                    php redaxo/bin/console package:install cronjob/optimize_tables --ansi
                    php redaxo/bin/console package:install debug --ansi
                    php redaxo/bin/console package:install structure/history --ansi
                    php redaxo/bin/console package:install structure/version --ansi
            -   name: Enable REDAXO setup mode
                run: |
                    php redaxo/bin/console config:set setup true -t boolean --ansi
                    php redaxo/bin/console cache:clear --ansi

            -   name: Setup Webserver
                run: |
                    php -S localhost:8000

            -   name: Set up Node ${{ env.node-version }}
                uses: actions/setup-node@v2
                with:
                    node-version: ${{ env.node-version }}
                    # cache all packages as specified in lockfile
                    cache: 'npm'
                    cache-dependency-path: .github/e2e/package-lock.json

            -   name: Install packages 🐿️🎒
                run: |
                    npm ci --audit=false
                    npx playwright install-deps chromium
                    npx playwright install-deps webkit

            -   name: E2E tests 🕹️
                # run e2e tests, see package.json for details.
                # check for modified (M) and untracked (??) files afterwards
                # hint: if workflow run was triggered by auto-commit, we do not let the step fail
                run: |
                    npm run test -- ./tests/setup/ --workers 1
                    if [[ -n $(git status -s -uall ${{ env.file_pattern }} | grep "^ M\|^??") ]]; then
                        echo "has_changed_files=true" >> $GITHUB_ENV
                        if ${{ env.run_was_triggered_by_autocommit != 'true'}}; then
                            exit 1;
                        fi
                    fi

            -   name: Prepare artifact 📦
                # prepare tar archive containing changed files
                # hint: we use `git status` to list changed files, grep all modified and untracked,
                # cut off status infos and pipe each file to the tar archive
                if: failure() && env.has_changed_files
                run: git status -s -uall ${{ env.file_pattern }} | grep "^ M\|^??" | cut -c4- | xargs tar -cvf ${{ env.artifact_name }}.tar

            -   name: Save artifact 💾
                # upload artifact containing changed files
                # hint: since github does not provide a list of artifacts, we prefix them with `ci-artifact-` for now
                # to be able to loop over them when downloaded again
                uses: actions/upload-artifact@v2
                if: failure() && env.has_changed_files
                with:
                    name: ci-artifact-${{ env.artifact_name }}
                    path: .github/e2e/${{ env.artifact_name }}.tar
                    retention-days: 1
